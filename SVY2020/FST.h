#pragma once
#pragma once

#include "IT.h"

namespace FST
{
	struct RELATION		// ребро: символ -> вершина графов переходов КА
	{
		char  symbol;	// символ перехода
		short nnode;	// номер смежной вершины
		RELATION(
			char c,		// символ перехода
			short ns	// новое состояние
		);
	};

	struct NODE					//вершина графа переходов
	{
		short n_relation;		//количество инциндентных ребер
		RELATION* relations;	//инциндентные ребра
		NODE();					//конструктор без параметров
		NODE(short n, RELATION rel, ...);  //количество инциндентных ребер, список ребер
	};

	struct FST   //недетерминированный конечный автомат
	{
		char* string;				//цепочка(строка, завершается 0х00)
		short position;				//текущая позиция в цепочке
		short nstates;				//количество состояний автомата
		NODE* node;					//граф переходов:[0]-начальное состояние, [nstate-1]-конечное
		short* rstates;				//возможные состояния автомата на данной позиции
		FST(short ns, NODE n, ...); // (массив)количество состояний автомата, список состояний(граф переходов)
		FST(char* s, FST& fst);		// количество состояний автомата, список состояний(граф переходов)
	};

	bool execute(FST& fst); //выполнить распознование цепочки
};

